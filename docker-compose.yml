services:
  rails-app:
    env_file:
      - .env
    image: fbatista/canivete:latest
    container_name: canivete-rails-app
    ports:
      - "3003:3000"
    environment:
      RAILS_ENV: ${RAILS_ENV}
      RAILS_MASTER_KEY: ${RAILS_MASTER_KEY}
      PRIMARY_DATABASE_URL: ${PRIMARY_DATABASE_URL}
      CACHE_DATABASE_URL: ${CACHE_DATABASE_URL}
      QUEUE_DATABASE_URL: ${QUEUE_DATABASE_URL}
      CABLE_DATABASE_URL: ${CABLE_DATABASE_URL}
    volumes:
      - /volume1/docker/canivete/log:/rails/log
      - /volume1/docker/canivete/storage:/rails/storage
      - /volume1/docker/canivete/tmp:/rails/tmp
    depends_on:
      - database
  database:
    image: postgis/postgis:16-3.5
    container_name: canivete-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - /volume1/docker/canivete/postgres:/var/lib/postgresql/data
  cloudflared:
    image: cloudflare/cloudflared:latest  # Use the cloudflare/cloudflared image
    restart: unless-stopped  # Restart the container unless it is explicitly stopped
    command: tunnel --url http://192.168.1.234:84  # Run the tunnel command with the specified URL
    volumes:
      - /volume1/docker/canivete/cloudflared:/etc/cloudflare  # Mount the host directory to the container's /etc/cloudflare directory
    depends_on:
      - rails-app  # Ensure the rails-app service is started before the Cloudflared service